{"ast":null,"code":"var _jsxFileName = \"/home/aakamsh/react-brototype/netflix-react/src/components/RowPost/RowPost.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from '../../constants/axios';\nimport { API_KEY, ImageUrl } from '../../constants/constants';\nimport './RowPost.css';\nimport Youtube from 'react-youtube';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RowPost(props) {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [urlId, setUrlId] = useState([]);\n  useEffect(() => {\n    axios.get(props.url).then(response => {\n      setMovies(response.data.results);\n    });\n  });\n  const handleMovClicks = id => {\n    axios.get(`movie/${id}/videos?api_key=${API_KEY}&language=en-US`).then(response => {\n      if (response.data.results.length !== 0) {\n        setUrlId(response.data.results);\n        console.l;\n      }\n    });\n  };\n  const opts = {\n    height: '390',\n    width: '100%',\n    playerVars: {\n      // https://developers.google.com/youtube/player_parameters\n      autoplay: 0\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posters\",\n      children: movies.map(obj => /*#__PURE__*/_jsxDEV(\"img\", {\n        onClick: () => {\n          handleMovClicks(obj.id);\n        },\n        className: props.isSmall ? 'smallPoster' : 'poster',\n        src: `${ImageUrl + obj.backdrop_path}`,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), urlId && /*#__PURE__*/_jsxDEV(Youtube, {\n      videoId: urlId.key,\n      opts: opts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(RowPost, \"qV6LIoDhqLMOTpHl5aJ8bJ6mi5M=\");\n_c = RowPost;\nexport default RowPost;\nvar _c;\n$RefreshReg$(_c, \"RowPost\");","map":{"version":3,"names":["React","useEffect","useState","axios","API_KEY","ImageUrl","Youtube","RowPost","props","movies","setMovies","urlId","setUrlId","get","url","then","response","data","results","handleMovClicks","id","length","console","l","opts","height","width","playerVars","autoplay","title","map","obj","isSmall","backdrop_path","key"],"sources":["/home/aakamsh/react-brototype/netflix-react/src/components/RowPost/RowPost.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport axios from '../../constants/axios'\nimport {API_KEY, ImageUrl } from '../../constants/constants'\nimport './RowPost.css'\nimport Youtube from 'react-youtube'\n\nfunction RowPost(props) {\n  const [movies, setMovies] = useState([])\n  const [urlId, setUrlId] = useState([])\n  useEffect(() => {\n    axios.get(props.url).then((response)=>{\n      setMovies(response.data.results)\n    })\n  },)\n  const handleMovClicks = (id) => {\n    axios.get(`movie/${id}/videos?api_key=${API_KEY}&language=en-US`).then((response)=>{\n      if(response.data.results.length !== 0){\n        setUrlId(response.data.results)\n        console.l;\n      }\n    })\n  }\n  const opts = {\n    height: '390',\n    width: '100%',\n    playerVars: {\n      // https://developers.google.com/youtube/player_parameters\n      autoplay: 0,\n    }\n  }\n  return (\n    <div className='row'>\n        <h2>{props.title}</h2> \n        <div className=\"posters\">\n          {movies.map((obj)=>\n            <img onClick={()=>{handleMovClicks(obj.id)}} className= {props.isSmall ? 'smallPoster' : 'poster'} src={`${ImageUrl + obj.backdrop_path}`} alt=\"\" />\n          )}\n        </div>\n        { urlId && <Youtube videoId= {urlId.key} opts = {opts} /> }\n    </div>\n  )\n}\n\nexport default RowPost"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,uBAAuB;AACzC,SAAQC,OAAO,EAAEC,QAAQ,QAAQ,2BAA2B;AAC5D,OAAO,eAAe;AACtB,OAAOC,OAAO,MAAM,eAAe;AAAA;AAEnC,SAASC,OAAO,CAACC,KAAK,EAAE;EAAA;EACtB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtCD,SAAS,CAAC,MAAM;IACdE,KAAK,CAACU,GAAG,CAACL,KAAK,CAACM,GAAG,CAAC,CAACC,IAAI,CAAEC,QAAQ,IAAG;MACpCN,SAAS,CAACM,QAAQ,CAACC,IAAI,CAACC,OAAO,CAAC;IAClC,CAAC,CAAC;EACJ,CAAC,CAAE;EACH,MAAMC,eAAe,GAAIC,EAAE,IAAK;IAC9BjB,KAAK,CAACU,GAAG,CAAE,SAAQO,EAAG,mBAAkBhB,OAAQ,iBAAgB,CAAC,CAACW,IAAI,CAAEC,QAAQ,IAAG;MACjF,IAAGA,QAAQ,CAACC,IAAI,CAACC,OAAO,CAACG,MAAM,KAAK,CAAC,EAAC;QACpCT,QAAQ,CAACI,QAAQ,CAACC,IAAI,CAACC,OAAO,CAAC;QAC/BI,OAAO,CAACC,CAAC;MACX;IACF,CAAC,CAAC;EACJ,CAAC;EACD,MAAMC,IAAI,GAAG;IACXC,MAAM,EAAE,KAAK;IACbC,KAAK,EAAE,MAAM;IACbC,UAAU,EAAE;MACV;MACAC,QAAQ,EAAE;IACZ;EACF,CAAC;EACD,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,wBAChB;MAAA,UAAKpB,KAAK,CAACqB;IAAK;MAAA;MAAA;MAAA;IAAA,QAAM,eACtB;MAAK,SAAS,EAAC,SAAS;MAAA,UACrBpB,MAAM,CAACqB,GAAG,CAAEC,GAAG,iBACd;QAAK,OAAO,EAAE,MAAI;UAACZ,eAAe,CAACY,GAAG,CAACX,EAAE,CAAC;QAAA,CAAE;QAAC,SAAS,EAAGZ,KAAK,CAACwB,OAAO,GAAG,aAAa,GAAG,QAAS;QAAC,GAAG,EAAG,GAAE3B,QAAQ,GAAG0B,GAAG,CAACE,aAAc,EAAE;QAAC,GAAG,EAAC;MAAE;QAAA;QAAA;QAAA;MAAA,QAAG;IACrJ;MAAA;MAAA;MAAA;IAAA,QACG,EACJtB,KAAK,iBAAI,QAAC,OAAO;MAAC,OAAO,EAAGA,KAAK,CAACuB,GAAI;MAAC,IAAI,EAAIV;IAAK;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QACvD;AAEV;AAAC,GAnCQjB,OAAO;AAAA,KAAPA,OAAO;AAqChB,eAAeA,OAAO;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}